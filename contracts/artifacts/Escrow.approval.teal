#pragma version 9

// This TEAL was generated by TEALScript v0.59.0
// https://github.com/algorandfoundation/TEALScript

// This contract is compliant with and/or implements the following ARCs: [ ARC4 ]

// The following ten lines of TEAL handle initial program flow
// This pattern is used to make it easy for anyone to parse the start of the program and determine if a specific action is allowed
// Here, action refers to the OnComplete in combination with whether the app is being created or called
// Every possible action for this contract is represented in the switch statement
// If the action is not implmented in the contract, its repsective branch will be "NOT_IMPLMENTED" which just contains "err"
txn ApplicationID
int 0
>
int 6
*
txn OnCompletion
+
switch create_NoOp NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED call_NoOp

NOT_IMPLEMENTED:
	err

// createApplication(uint64,string,uint64,address,address,address,asset)void
abi_route_createApplication:
	// contractLength: uint64
	txna ApplicationArgs 7
	btoi

	// terms: string
	txna ApplicationArgs 6
	extract 2 0

	// amount: uint64
	txna ApplicationArgs 5
	btoi

	// arbiter: address
	txna ApplicationArgs 4
	dup
	len
	int 32
	==
	assert

	// owner: address
	txna ApplicationArgs 3
	dup
	len
	int 32
	==
	assert

	// renter: address
	txna ApplicationArgs 2
	dup
	len
	int 32
	==
	assert

	// asa: asset
	txna ApplicationArgs 1
	btoi
	txnas Assets

	// execute createApplication(uint64,string,uint64,address,address,address,asset)void
	callsub createApplication
	int 1
	return

createApplication:
	proto 7 0

	// contracts/escrow.algo.ts:22
	// this.asa.value = asa
	byte 0x617361 // "asa"
	frame_dig -1 // asa: asset
	app_global_put

	// contracts/escrow.algo.ts:23
	// this.renter.value = renter
	byte 0x72656e746572 // "renter"
	frame_dig -2 // renter: address
	app_global_put

	// contracts/escrow.algo.ts:24
	// this.owner.value = owner
	byte 0x6f776e6572 // "owner"
	frame_dig -3 // owner: address
	app_global_put

	// contracts/escrow.algo.ts:25
	// this.arbiter.value = arbiter
	byte 0x61726269746572 // "arbiter"
	frame_dig -4 // arbiter: address
	app_global_put

	// contracts/escrow.algo.ts:26
	// this.amount.value = amount
	byte 0x616d6f756e74 // "amount"
	frame_dig -5 // amount: uint64
	app_global_put

	// contracts/escrow.algo.ts:27
	// this.terms.value = terms
	byte 0x7465726d73 // "terms"
	frame_dig -6 // terms: bytes
	dup
	len
	itob
	extract 6 2
	swap
	concat
	app_global_put

	// contracts/escrow.algo.ts:28
	// this.expiresTime.value = contractLength + globals.latestTimestamp
	byte 0x6578706972657354696d65 // "expiresTime"
	frame_dig -7 // contractLength: uint64
	global LatestTimestamp
	+
	app_global_put
	retsub

// getParties()(address,address,address)
abi_route_getParties:
	// execute getParties()(address,address,address)
	callsub getParties
	int 1
	return

getParties:
	proto 0 0

	// contracts/escrow.algo.ts:32
	// return [this.renter.value, this.owner.value, this.arbiter.value];
	byte 0x72656e746572 // "renter"
	app_global_get
	byte 0x6f776e6572 // "owner"
	app_global_get
	concat
	byte 0x61726269746572 // "arbiter"
	app_global_get
	concat
	byte 0x151f7c75
	swap
	concat
	log
	retsub

// renterArbitration()void
abi_route_renterArbitration:
	// execute renterArbitration()void
	callsub renterArbitration
	int 1
	return

renterArbitration:
	proto 0 0

	// contracts/escrow.algo.ts:36
	// assert(globals.latestTimestamp <= this.expiresTime.value)
	global LatestTimestamp
	byte 0x6578706972657354696d65 // "expiresTime"
	app_global_get
	<=
	assert

	// contracts/escrow.algo.ts:37
	// verifyTxn(this.txn, { sender: this.renter.value })
	// verify sender
	txn Sender
	byte 0x72656e746572 // "renter"
	app_global_get
	==
	assert

	// contracts/escrow.algo.ts:38
	// this.arbitration.value = 1
	byte 0x6172626974726174696f6e // "arbitration"
	int 1
	app_global_put
	retsub

// ownerArbitration()void
abi_route_ownerArbitration:
	// execute ownerArbitration()void
	callsub ownerArbitration
	int 1
	return

ownerArbitration:
	proto 0 0

	// contracts/escrow.algo.ts:42
	// assert(globals.latestTimestamp <= this.expiresTime.value)
	global LatestTimestamp
	byte 0x6578706972657354696d65 // "expiresTime"
	app_global_get
	<=
	assert

	// contracts/escrow.algo.ts:43
	// verifyTxn(this.txn, { sender: this.owner.value })
	// verify sender
	txn Sender
	byte 0x6f776e6572 // "owner"
	app_global_get
	==
	assert

	// contracts/escrow.algo.ts:44
	// this.arbitration.value = 1
	byte 0x6172626974726174696f6e // "arbitration"
	int 1
	app_global_put
	retsub

// ownerWithdraw()void
abi_route_ownerWithdraw:
	// execute ownerWithdraw()void
	callsub ownerWithdraw
	int 1
	return

ownerWithdraw:
	proto 0 0

	// contracts/escrow.algo.ts:48
	// assert(globals.latestTimestamp > this.expiresTime.value)
	global LatestTimestamp
	byte 0x6578706972657354696d65 // "expiresTime"
	app_global_get
	>
	assert

	// contracts/escrow.algo.ts:49
	// assert(this.arbitration.value === 0)
	byte 0x6172626974726174696f6e // "arbitration"
	app_global_get
	int 0
	==
	assert

	// contracts/escrow.algo.ts:51
	// sendPayment({
	//       amount: this.app.address.balance,
	//       receiver: this.owner.value,
	//     })
	itxn_begin
	int pay
	itxn_field TypeEnum

	// contracts/escrow.algo.ts:52
	// amount: this.app.address.balance
	global CurrentApplicationAddress
	acct_params_get AcctBalance
	assert
	itxn_field Amount

	// contracts/escrow.algo.ts:53
	// receiver: this.owner.value
	byte 0x6f776e6572 // "owner"
	app_global_get
	itxn_field Receiver

	// Fee field not set, defaulting to 0
	int 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit
	retsub

// arbiterWithdraw()void
abi_route_arbiterWithdraw:
	// execute arbiterWithdraw()void
	callsub arbiterWithdraw
	int 1
	return

arbiterWithdraw:
	proto 0 0

	// contracts/escrow.algo.ts:58
	// assert(globals.latestTimestamp > this.expiresTime.value)
	global LatestTimestamp
	byte 0x6578706972657354696d65 // "expiresTime"
	app_global_get
	>
	assert

	// contracts/escrow.algo.ts:59
	// assert(this.arbitration.value === 1)
	byte 0x6172626974726174696f6e // "arbitration"
	app_global_get
	int 1
	==
	assert

	// contracts/escrow.algo.ts:61
	// sendPayment({
	//       amount: this.app.address.balance,
	//       receiver: this.arbiter.value,
	//     })
	itxn_begin
	int pay
	itxn_field TypeEnum

	// contracts/escrow.algo.ts:62
	// amount: this.app.address.balance
	global CurrentApplicationAddress
	acct_params_get AcctBalance
	assert
	itxn_field Amount

	// contracts/escrow.algo.ts:63
	// receiver: this.arbiter.value
	byte 0x61726269746572 // "arbiter"
	app_global_get
	itxn_field Receiver

	// Fee field not set, defaulting to 0
	int 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit
	retsub

create_NoOp:
	method "createApplication(asset,address,address,address,uint64,string,uint64)void"
	txna ApplicationArgs 0
	match abi_route_createApplication
	err

call_NoOp:
	method "getParties()(address,address,address)"
	method "renterArbitration()void"
	method "ownerArbitration()void"
	method "ownerWithdraw()void"
	method "arbiterWithdraw()void"
	txna ApplicationArgs 0
	match abi_route_getParties abi_route_renterArbitration abi_route_ownerArbitration abi_route_ownerWithdraw abi_route_arbiterWithdraw
	err